services:
  # OpenTelemetry 관련 서비스들
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.119.0
    container_name: otelcol
    volumes:
      - ./otelcol.yaml:/etc/otelcol/config.yaml:ro
    command: ["--config=/etc/otelcol/config.yaml"]
    ports:
      - "4318:4318"   # OTLP/HTTP 수신 (기본 포트)
      - "4317:4317"   # OTLP/gRPC 수신 (원하면 사용)
      - "9464:9464"   # Prometheus 수신
    depends_on:
      - jaeger
      - tempo
    networks:
      - otel-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      # - "6831:6831/udp"
      # - "6832:6832/udp"
      # - "4317:4317" # gRPC
      # - "14268:14268"
      - "14250:14250" # gRPC
    networks:
      - otel-network

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    user: "1000:1000"
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - /appdata/storage/tempo:/tmp/tempo
    ports:
      - "3200:3200"     # Tempo HTTP
    networks:
      - otel-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090" # Prometheus UI
    networks:
      - otel-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "1000:1000"
    volumes:
      - ${GRAFANA_DATA}:/var/lib/grafana
    ports:
      - "3000:3000" # Grafana UI
    networks:
      - otel-network

  fastapi:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: otelmon-api
    ports:
      - "8090:8090"
    user: "1000:1000"
    volumes:
      - ./api:/app
      - ./api/logs:/app/logs
    restart: unless-stopped
    networks:
      - otel-network
    environment:
      - TZ=Asia/Seoul
      - LOG_DIR=/app/logs

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=otelmon
      - MYSQL_USER=monitor
      - MYSQL_PASSWORD=1q2w3e4r
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_general_ci
    networks:
      - otel-network

  nifi:
    build:
      context: ./nifi
      dockerfile: Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: nifi
    user: "1000:1000"
    ports:
      - "38443:38443"
    volumes:
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
      - nifi_conf:/opt/nifi/nifi-current/conf
      - ./nifi/scripts:/opt/nifi/nifi-current/scripts
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./nifi/storage:/opt/nifi/nifi-current/storage
    environment:
      TZ: 'Asia/Seoul'
      NIFI_WEB_HTTPS_HOST: '0.0.0.0'
      NIFI_WEB_HTTPS_PORT: 38443
      NIFI_WEB_PROXY_HOST: '0.0.0.0:38443'
      SINGLE_USER_CREDENTIALS_USERNAME: 'admin'
      SINGLE_USER_CREDENTIALS_PASSWORD: 'Admin@nifi1234' # 12자 이상
      REAL_HOSTNAME: '${REAL_HOSTNAME:-cpietl}'

    healthcheck:
      test: ["CMD", "curl", "-kf", "https://nifi:38443/nifi"]
      interval: 30s
      timeout: 10s
      retries: 3

    networks:
      - otel-network

volumes:
  mariadb_data:
  nifi_database_repository:
  nifi_flowfile_repository:
  nifi_content_repository:
  nifi_provenance_repository:
  nifi_state:
  nifi_conf:

networks:
  otel-network:
    external: true
    name: otel-network
